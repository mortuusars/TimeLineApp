<Window x:Class="TimeLine.Views.StopwatchView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TimeLine.Views"
        mc:Ignorable="d"
        Title="StopwatchView" 
        Height="84" Width="{Binding Width, Mode=TwoWay}"
        WindowStartupLocation="Manual" 
        Left="{Binding Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        Top="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        
        ResizeMode="NoResize" WindowStyle="None" ShowInTaskbar="False" Topmost="True"
        Background="Transparent" AllowsTransparency="True">

    <Window.Resources>

        <!-- Resources -->

        <DropShadowEffect x:Key="Shadow" BlurRadius="22" ShadowDepth="6" Direction="-90" Opacity="0.5"/>

        <Duration x:Key="ButtonHoverDurationIn">0:0:0.05</Duration>
        <Duration x:Key="ButtonHoverDurationOut">0:0:0.4</Duration>

        <CircleEase x:Key="EaseOut" EasingMode="EaseOut"/>
        <CircleEase x:Key="EaseInOut" EasingMode="EaseInOut"/>



        <!-- Window Fade Animation -->

        <Storyboard x:Key="WindowFadeIn">
            <DoubleAnimation Duration="0:0:0.5" From="0" To="1" Storyboard.TargetProperty="Opacity" FillBehavior="Stop" EasingFunction="{StaticResource EaseOut}"/>
        </Storyboard>

        <Storyboard x:Key="WindowFadeOut">
            <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetProperty="Opacity" EasingFunction="{StaticResource EaseOut}"/>
        </Storyboard>



        <!-- Button Animations -->

        <!-- Hover -->

        <Storyboard x:Key="HoverAnimationIn">
            <DoubleAnimation  Storyboard.TargetProperty="Height"
                              Duration="{StaticResource ButtonHoverDurationIn}" EasingFunction="{StaticResource EaseOut}"
                              To="30"/>
            <DoubleAnimation  Storyboard.TargetProperty="Width"
                              Duration="{StaticResource ButtonHoverDurationIn}" EasingFunction="{StaticResource EaseOut}"
                              To="30"/>
        </Storyboard>


        <Storyboard x:Key="HoverAnimationOut">
            <DoubleAnimation Storyboard.TargetProperty="Height"  
                             Duration="{StaticResource ButtonHoverDurationOut}" EasingFunction="{StaticResource EaseOut}"
                             To="26"/>
            <DoubleAnimation Storyboard.TargetProperty="Width"  
                             Duration="{StaticResource ButtonHoverDurationOut}" EasingFunction="{StaticResource EaseOut}"
                             To="26"/>
        </Storyboard>


        <Storyboard x:Key="ButtonClick">
            <DoubleAnimation Storyboard.TargetProperty="Height"
                             Duration="0:0:0.7"
                             From="0" To="26" 
                             FillBehavior="Stop" EasingFunction="{StaticResource EaseInOut}"/>
            <DoubleAnimation Storyboard.TargetProperty="Width"
                             Duration="0:0:0.7"  
                             From="0" To="26" 
                             FillBehavior="Stop" EasingFunction="{StaticResource EaseInOut}"/>
        </Storyboard>


        <Style TargetType="Border" x:Key="BorderStyle">
            <Setter Property="Background" Value="{StaticResource LightBrush}"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Effect" Value="{StaticResource Shadow}"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowClosing}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource WindowFadeOut}"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <!--#region Buttons Style -->

        <Style x:Key="DefaultButton" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Opacity" Value="0.85"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverAnimationIn}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HoverAnimationOut}"/>
                    </Trigger.ExitActions>
                </Trigger>

                <EventTrigger RoutedEvent="Click">
                    <BeginStoryboard Storyboard="{StaticResource ButtonClick}"/>
                </EventTrigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="StartPauseButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Resources/Icons/play_64.png" Stretch="UniformToFill"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Stopwatch.StopwatchRunning}" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="/Resources/Icons/pause_64.png" Stretch="UniformToFill"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StopButton" TargetType="Button" BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Resources/Icons/stop_64.png"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource PtMono}"/>
        </Style>

    </Window.Resources>
    
    
    <!-- Main Border -->

    <Border Margin="14 14 14 24" 
            Style="{StaticResource BorderStyle}"
            MouseLeftButtonDown="Border_MouseLeftButtonDown">

        <Border.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource WindowFadeIn}"/>
            </EventTrigger>
        </Border.Triggers>

        <Grid Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="42"/>
                <ColumnDefinition Width="42"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Start-Pause-Close Button -->            
            <Button Grid.Column="0" Margin="2"
                    Style="{StaticResource StartPauseButton}" 
                    Template="{DynamicResource ButtonNoStyle}"
                    Command="{Binding StartPauseCommand}">
                <Button.InputBindings>
                    <MouseBinding Gesture="RightClick" Command="{Binding CloseCommand}"/>
                </Button.InputBindings>
            </Button>

            
            <!-- Stop-Reset Button-->
            <Button Grid.Column="1" Margin="2"
                    Style="{StaticResource StopButton}" 
                    Template="{DynamicResource ButtonNoStyle}" 
                    Command="{Binding StopCommand}"
                    >
                <Button.InputBindings>
                    <MouseBinding  Command="{Binding ResetCommand}" Gesture="RightClick"/>
                </Button.InputBindings>
            </Button>

            <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 1 0 0"
                       Style="{StaticResource TextBlockStyle}" Foreground="{StaticResource HalfLightBrush}"
                       Text="{Binding GhostTime}" d:Text="00:00:00"
                       FontSize="38" IsHitTestVisible="False"/>

            <Grid Grid.Column="2" Margin="80 -4 0 -4" Panel.ZIndex="0" Opacity="1" >
                <Rectangle  Width="30" Height="60" Fill="LightSeaGreen" Visibility="{Binding DayOne, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <SkewTransform AngleX="30" AngleY="0"/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>

                <Rectangle Margin="30 0 0 0"  Width="30" Height="60" Fill="LightSteelBlue" Visibility="{Binding DayTwo, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <SkewTransform AngleX="30" AngleY="0"/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
            
            <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10 1 0 0"
                       Style="{StaticResource TextBlockStyle}"
                       Text="{Binding Time}" d:Text="   12:01"
                       FontSize="38" IsHitTestVisible="False"/>



            

        </Grid>
    </Border>
</Window>
