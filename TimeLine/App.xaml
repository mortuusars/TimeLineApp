<Application x:Class="TimeLine.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TimeLine"
             xmlns:tb="http://www.hardcodet.net/taskbar" xmlns:sys="clr-namespace:System;assembly=mscorlib"
             ShutdownMode="OnExplicitShutdown">

    <Application.Resources>
        <ResourceDictionary>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Fonts.xaml"/>
                <ResourceDictionary Source="Styles/Colors.xaml"/>


                <ResourceDictionary Source="Styles/TaskbarIconStyle.xaml"/>
                
                
            </ResourceDictionary.MergedDictionaries>

            <!-- Converters -->
            <local:StringToImageConverter x:Key="StringToImageConverter"/>
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>


            <!-- Window Properties -->
            <Duration x:Key="ToastFadeOutDuration">0:0:0.6</Duration>
            <sys:TimeSpan x:Key="ToastMoveUpBeginTime">0:0:0.6</sys:TimeSpan>
            <Duration x:Key="WindowFadeDuration">0:0:0.5</Duration>



            <!-- Empty Button Style, when using image as button -->  
            <ControlTemplate x:Key="ButtonNoStyle" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="#00000000"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="#00000000"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Opacity" Value="0.6"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#00000000"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#00000000"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            
        </ResourceDictionary>
    </Application.Resources>
    
</Application>
